{"version":3,"sources":["../src/index.js"],"names":["chouon","require","checkNoSpace","text","noSpace_before","noSpace_after","matches_b","exec","matches_a","results","push","message","index","module","exports","context","options","Syntax","RuleError","report","getSource","Str","node","forEach","c","matches","RegExp","indexOfBugs","ruleError","r"],"mappings":"AAAA;;;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC3B,MAAMC,cAAc,GAAG,wFAAvB;AACA,MAAMC,aAAa,GAAG,sFAAtB;AAEA,MAAMC,SAAS,GAAGF,cAAc,CAACG,IAAf,CAAoBJ,IAApB,CAAlB;AACA,MAAMK,SAAS,GAAGH,aAAa,CAACE,IAAd,CAAmBJ,IAAnB,CAAlB;AACA,MAAIM,OAAO,GAAG,EAAd;;AACA,MAAGH,SAAH,EAAc;AACV,QAAG,CAAC,QAAQC,IAAR,CAAaJ,IAAb,CAAJ,EAAuB;AACnBM,MAAAA,OAAO,CAACC,IAAR,CAAa;AACTC,QAAAA,OAAO,EAAE,WADA;AAETC,QAAAA,KAAK,EAAEN,SAAS,CAACM;AAFR,OAAb;AAIH;AACJ;;AACD,MAAGJ,SAAH,EAAc;AACVC,IAAAA,OAAO,CAACC,IAAR,CAAa;AACTC,MAAAA,OAAO,EAAE,WADA;AAETC,MAAAA,KAAK,EAAEJ,SAAS,CAACI;AAFR,KAAb;AAIH;;AACD,SAAOH,OAAP;AACH,CAtBD;;AAwBAI,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAgC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAAA,MACtCC,MADsC,GACEF,OADF,CACtCE,MADsC;AAAA,MAC9BC,SAD8B,GACEH,OADF,CAC9BG,SAD8B;AAAA,MACnBC,MADmB,GACEJ,OADF,CACnBI,MADmB;AAAA,MACXC,SADW,GACEL,OADF,CACXK,SADW;AAE7C,6BACKH,MAAM,CAACI,GADZ,YACiBC,IADjB,EACsB;AAAE;AAChB,QAAMnB,IAAI,GAAGiB,SAAS,CAACE,IAAD,CAAtB,CADc,CACgB;;AAC9BtB,IAAAA,MAAM,CAACuB,OAAP,CAAgB,UAAAC,CAAC,EAAI;AACjB,UAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAWF,CAAC,GAAG,OAAf,EAAwB,IAAxB,EAA+BjB,IAA/B,CAAoCJ,IAApC,CAAhB,CADiB,CAC0C;;AAC3D,UAAI,CAACsB,OAAL,EAAc;AACV;AACH;;AACD,UAAME,WAAW,GAAGF,OAAO,CAACb,KAA5B;AACA,UAAMgB,SAAS,GAAG,IAAIV,SAAJ,WAAiBM,CAAjB,oEAAiC;AAC/CZ,QAAAA,KAAK,EAAEe,WADwC,CAC5B;;AAD4B,OAAjC,CAAlB;AAGAR,MAAAA,MAAM,CAACG,IAAD,EAAOM,SAAP,CAAN;AACH,KAVD;AAYA,QAAMnB,OAAO,GAAGP,YAAY,CAACC,IAAD,CAA5B;AACAM,IAAAA,OAAO,CAACc,OAAR,CAAiB,UAAAM,CAAC,EAAI;AAClB,UAAMD,SAAS,GAAG,IAAIV,SAAJ,CAAcW,CAAC,CAAClB,OAAhB,EAAyB;AAACC,QAAAA,KAAK,EAAEiB,CAAC,CAACjB;AAAV,OAAzB,CAAlB;AACAO,MAAAA,MAAM,CAACG,IAAD,EAAOM,SAAP,CAAN;AACH,KAHD;AAIH,GApBL;AAsBH,CAxBD","sourcesContent":["\"use strict\";\r\nconst chouon = require('./chouon')\r\n\r\nconst checkNoSpace = (text) => {\r\n    const noSpace_before = /[^、。”「a-zA-Z0-9!\"#-'()*-\\/;-@¥\\[\\]\\\\^_{-~\\s]([a-zA-Z0-9!#-'(*-\\.;<=?-@¥\\[\\\\^_{-~])+?/gm\r\n    const noSpace_after = /([a-zA-Z0-9!#-')*-\\.;=-@¥\\]\\\\^_{-~])+?[^、。”」a-zA-Z0-9!\"#-'()*-\\/:-@¥\\[\\]\\\\^_{-~\\s]/gm\r\n        \r\n    const matches_b = noSpace_before.exec(text)\r\n    const matches_a = noSpace_after.exec(text)\r\n    let results = []\r\n    if(matches_b) {\r\n        if(!/\\.{3}/.exec(text)){\r\n            results.push({\r\n                message: \"スペースが必要です\",\r\n                index: matches_b.index\r\n            })\r\n        }\r\n    }\r\n    if(matches_a) {\r\n        results.push({\r\n            message: \"スペースが必要です\",\r\n            index: matches_a.index\r\n        })\r\n    }\r\n    return results\r\n}\r\n\r\nmodule.exports = function(context, options = {}) {\r\n    const {Syntax, RuleError, report, getSource} = context;\r\n    return {\r\n        [Syntax.Str](node){ // \"Str\" node\r\n            const text = getSource(node); // Get text\r\n            chouon.forEach( c => {\r\n                const matches = new RegExp(c + \"[^ー$]\", 'gm' ).exec(text); // Found \"bugs\"\r\n                if (!matches) {\r\n                    return;\r\n                }\r\n                const indexOfBugs = matches.index;\r\n                const ruleError = new RuleError(`${c} に長音記号が必要です`, {\r\n                    index: indexOfBugs // padding of index\r\n                });\r\n                report(node, ruleError);                \r\n            });\r\n            \r\n            const results = checkNoSpace(text)\r\n            results.forEach( r => {\r\n                const ruleError = new RuleError(r.message, {index: r.index})\r\n                report(node, ruleError)\r\n            })\r\n        }\r\n    }\r\n};\r\n"],"file":"index.js"}